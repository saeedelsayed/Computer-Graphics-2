#version 430

#define MAX_FRAGMENTS 32

//***** begin interface of fragment.glfs ***********************************
uniform float gamma = 2.2;
void finish_fragment(vec4 color);
//***** end interface of fragment.glfs ***********************************

//***** begin interface of a_buffer.glsl ***********************************
bool a_buffer_gather_and_blend(in vec2 frag_xy, out vec4 rgba, out float depth);
bool a_buffer_insert_fragment(vec3 frag_xyz, vec4 rgba);
//***** end interface of a_buffer.glsl ***********************************

void main()
{
	float depth;
	vec4 rgba;
	if (!a_buffer_gather_and_blend(gl_FragCoord.xy, rgba, depth))
		discard;

	gl_FragDepth = depth;
	// Extract fragment color and opacity
	finish_fragment(rgba);
}
